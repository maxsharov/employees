{"version":3,"sources":["components/Letter/Letter.js","store/localStorage.js","store/actionTypes.js","store/actions.js","containers/Employees.js","components/EmployeesBirthday/EmployeesBirthday.js","App.js","store/reducer.js","store/initialState.js","index.js"],"names":["Letter","props","list","selectedEmpl","useSelector","state","selectedEmployees","employees","map","employee","lastName","firstName","type","onChange","toggleChange","checked","includes","id","className","letter","loadState","localStorage","getItem","JSON","parse","err","console","error","saveState","serializedState","stringify","setItem","SELECT_EMPLOYEE","UNSELECT_EMPLOYEE","GET_EMPLOYEES","getEmployees","actionTypes","Employees","alphabet","employeesFetched","dispatch","useDispatch","onToggleChange","event","target","updatedEmployees","concat","actions","splice","useEffect","a","axios","get","result","data","sort","b","letters","employeesByLetter","reduce","acc","obj","key","push","EmployeesBirthday","months","employeesByMonth","length","newEmplObj","filter","date","Date","dob","birthday","getDate","getMonth","getFullYear","month","index","App","Component","reducer","action","log","indexOf","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"wPAkCeA,EA/BA,SAACC,GACd,IAEIC,EAFEC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,qBAsBlD,OAjBEJ,EADED,EAAMM,UACDN,EAAMM,UAAUC,KAAI,SAACC,GAC1B,OACE,gCACGA,EAASC,SADZ,IACuBD,EAASE,UAAW,IACzC,uBACEC,KAAK,WACLC,SAAUZ,EAAMa,aAChBC,QAASZ,EAAaa,SAASP,EAASQ,IACxCA,GAAIR,EAASQ,OANPR,EAASQ,OAYhB,QAIP,sBAAKC,UAAU,SAAf,UACE,6BAAKjB,EAAMkB,SACVjB,M,0CC7BMkB,EAAY,WACvB,IACE,IAAMd,EAAoBe,aAAaC,QAAQ,qBAC/C,GAA0B,OAAtBhB,EACF,OAEF,OAAOiB,KAAKC,MAAMlB,GAClB,MAAOmB,GAEP,YADAC,QAAQC,MAAMF,KAKLG,EAAY,SAACtB,GAGxB,IACE,IAAMuB,EAAkBN,KAAKO,UAAUxB,GACvCe,aAAaU,QAAQ,oBAAqBF,GAC1C,MAAOJ,GACPC,QAAQC,MAAMF,KCpBLO,EAAkB,kBAClBC,EAAoB,oBAEpBC,EAAgB,gBCEhBC,EAAe,SAAC5B,GAC3B,MAAO,CACLK,KAAMwB,EACN7B,UAAWA,ICsDA8B,MAxDf,WACE,IAAMC,EAAWlC,aAAY,SAACC,GAAD,OAAWA,EAAMiC,YACxC/B,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAMkC,oBACzCC,EAAWC,cAMjB,SAASC,EAAeC,GAClBA,EAAMC,OAAO7B,QACfyB,EDcwB,SAACvB,GAE7B,IAAMX,EAAoBc,IAE1B,GAAId,EAAkBU,SAASC,GAAK,CAElC,IAAM4B,EAAmBvC,EAAkBwC,OAAO7B,GAGlDW,EAAUiB,GAGZ,MAAO,CACLjC,KAAMwB,EACNnB,GAAIA,GC5BO8B,CAAuBJ,EAAMC,OAAO3B,KAE7CuB,ED8B0B,SAACvB,GAE/B,IAAMX,EAAoBc,IAW1B,OARId,EAAkBU,SAASC,KAE7BX,EAAkB0C,OAAO/B,EAAI,GAG7BW,EAAUtB,IAGL,CACLM,KAAMwB,EACNnB,GAAIA,GC7CO8B,CAAyBJ,EAAMC,OAAO3B,KAInD,GAZAgC,qBAAU,WACRT,EDCF,uCAAO,WAAOA,GAAP,iBAAAU,EAAA,+EAEkBC,IAAMC,IACzB,kEAHC,OAEGC,EAFH,OAMG9C,EAAY8C,EAAOC,KAAKC,MAAK,SAAUL,EAAGM,GAC9C,OAAIN,EAAExC,SAAW8C,EAAE9C,UAAkB,EACzB,KAGd8B,EAASL,EAAa5B,IAXnB,gDAaHmB,QAAQC,MAAR,MAbG,yDAAP,yDCAG,CAACa,KAUCjC,EACH,OAAO,wBAGT,IAAIkD,EAAU,GAEd,GAAIlD,EAAW,CACb,IAAMmD,EAAoBnD,EAAUoD,QAAO,SAAUC,EAAKC,GACxD,IAAIC,EAAMD,EAAG,SAAa,GAK1B,OAJKD,EAAIE,KACPF,EAAIE,GAAO,IAEbF,EAAIE,GAAKC,KAAKF,GACPD,IACN,IAEHH,EAAUnB,EAAS9B,KAAI,SAACW,GACtB,OACE,cAAC,EAAD,CAEEA,OAAQA,EACRL,aAAc4B,EACdnC,UACEmD,EAAkBvC,GAAUuC,EAAkBvC,GAAU,MAJrDA,MAWb,OACE,sBAAKD,UAAU,iBAAf,UACE,4CACA,uBACA,qBAAKA,UAAU,UAAf,SAA0BuC,Q,OCajBO,EAnEW,WACxB,IAAMC,EAAS7D,aAAY,SAACC,GAAD,OAAWA,EAAM4D,UACtC3D,EAAoBF,aAAY,SAACC,GAAD,OAAWA,EAAMC,qBACjDiC,EAAmBnC,aAAY,SAACC,GAAD,OAAWA,EAAMkC,oBAElD2B,EAAmB,GAEvB,GAAI5D,EAAkB6D,QAAU5B,EAAkB,CAChD,IAmBM6B,EAnBkB7B,EACrB8B,QAAO,SAAC5D,GAAD,OAAcH,EAAkBU,SAASP,EAASQ,OACzDT,KAAI,SAACC,GACJ,IAAM6D,EAAO,IAAIC,KAAK9D,EAAS+D,KAEzBC,EACJH,EAAKI,UACL,IACAT,EAAOK,EAAKK,YACZ,KACAL,EAAKM,cAEP,OAAO,2BAAKnE,GAAZ,IAAsBoE,MAAOP,EAAKK,WAAYF,SAAUA,OAEzDlB,MAAK,SAAUL,EAAGM,GACjB,OAAIN,EAAEsB,IAAMhB,EAAEgB,KAAa,EACf,KAGmBb,QAAO,SAAUC,EAAKC,GACvD,IAAIC,EAAMD,EAAIgB,MAKd,OAJKjB,EAAIE,KACPF,EAAIE,GAAO,IAEbF,EAAIE,GAAKC,KAAKF,GACPD,IACN,IAEHM,EAAmBD,EAAOzD,KAAI,SAACqE,EAAOC,GACpC,OAAOV,EAAWU,GAChB,sBAAiB5D,UAAU,QAA3B,UACE,6BAAK+C,EAAOa,KAEZ,6BACGV,EAAWU,GAAOtE,KAAI,SAACC,GAAD,OACrB,+BACGA,EAASC,SADZ,IACuBD,EAASE,UADhC,MAC8CF,EAASgE,SAAU,IADjE,SAAShE,EAASQ,WALd4D,GAYR,QAIR,OACE,sBAAK3D,UAAU,sBAAf,UACE,qDACA,uBACCgD,EAAiBC,OAChB,qBAAKjD,UAAU,SAAf,SAAyBgD,IAEzB,0DC9COa,G,6KATX,OACE,sBAAK7D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALU8D,c,QC0CHC,EA/CC,SAAC5E,EAAO6E,GACtB,OAAQA,EAAOtE,MACb,KAAKwB,EAGH,GAFAV,QAAQyD,IAAI,WAAY9E,GAEnBA,EAAMC,kBAAkBU,SAASkE,EAAOjE,IAa3C,OAAOZ,EAZPqB,QAAQyD,IAAI,0BAA2B9E,EAAMC,mBAE7C,IAAMuC,EAAmBxC,EAAMC,kBAAkBwC,OAAOoC,EAAOjE,IAK/D,OAHAS,QAAQyD,IAAI,YAAaD,EAAOjE,IAChCS,QAAQyD,IAAI,mBAAoBtC,GAEzB,2BACFxC,GADL,IAEEC,kBAAmBuC,IAMzB,KAAKT,EACH,GAAI/B,EAAMC,kBAAkBU,SAASkE,EAAOjE,IAAK,CAC/C,IAAM6D,EAAQzE,EAAMC,kBAAkB8E,QAAQF,EAAOjE,IAE/C4B,EAAgB,YAAOxC,EAAMC,mBAGnC,OAFAuC,EAAiBG,OAAO8B,EAAO,GAExB,2BACFzE,GADL,IAEEC,kBAAmBuC,IAGrB,OAAOxC,EAGX,KAAK+B,EACH,OAAO,2BACF/B,GADL,IAEEkC,iBAAkB2C,EAAO3E,YAG7B,QACE,OAAOF,ICzCAgF,EAAe,CAC1B/C,SAAU,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF2B,OAAQ,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEF3D,kBA7CqBc,IA8CrBmB,iBAAkB,ICrCd+C,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,YACZV,EACAI,EACAC,EAAiBM,YAAgBC,OAGnCC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.00cbb51b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Letter = (props) => {\r\n  const selectedEmpl = useSelector((state) => state.selectedEmployees);\r\n\r\n  let list;\r\n\r\n  if (props.employees) {\r\n    list = props.employees.map((employee) => {\r\n      return (\r\n        <div key={employee.id}>\r\n          {employee.lastName} {employee.firstName}{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={props.toggleChange}\r\n            checked={selectedEmpl.includes(employee.id)}\r\n            id={employee.id}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  } else {\r\n    list = \"-----\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"Letter\">\r\n      <h3>{props.letter}</h3>\r\n      {list}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Letter;\r\n","export const loadState = () => {\r\n  try {\r\n    const selectedEmployees = localStorage.getItem(\"selectedEmployees\");\r\n    if (selectedEmployees === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(selectedEmployees);\r\n  } catch (err) {\r\n    console.error(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (selectedEmployees) => {\r\n  // console.log(\"[saveState]\");\r\n  // console.log(selectedEmployees);\r\n  try {\r\n    const serializedState = JSON.stringify(selectedEmployees);\r\n    localStorage.setItem(\"selectedEmployees\", serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","export const SELECT_EMPLOYEE = \"SELECT_EMPLOYEE\";\r\nexport const UNSELECT_EMPLOYEE = \"UNSELECT_EMPLOYEE\";\r\nexport const SAVE_FETCHED_EMPLOYEES = \"SAVE_FETCHED_EMPLOYEES\";\r\nexport const GET_EMPLOYEES = \"GET_EMPLOYEES\";\r\n","import axios from \"axios\";\r\n\r\nimport { loadState, saveState } from \"./localStorage\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getEmployees = (employees) => {\r\n  return {\r\n    type: actionTypes.GET_EMPLOYEES,\r\n    employees: employees,\r\n  };\r\n};\r\n\r\nexport const fetchEmployees = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const result = await axios.get(\r\n        \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\r\n      );\r\n\r\n      const employees = result.data.sort(function (a, b) {\r\n        if (a.lastName < b.lastName) return -1;\r\n        else return 1;\r\n      });\r\n\r\n      dispatch(getEmployees(employees));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectEmployee = (id) => {\r\n  // get ids from localstorage\r\n  const selectedEmployees = loadState();\r\n\r\n  if (selectedEmployees.includes(id)) {\r\n    // add id to array\r\n    const updatedEmployees = selectedEmployees.concat(id);\r\n\r\n    // set localstorage\r\n    saveState(updatedEmployees);\r\n  }\r\n\r\n  return {\r\n    type: actionTypes.SELECT_EMPLOYEE,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const unselectEmployee = (id) => {\r\n  // get ids from localstorage\r\n  const selectedEmployees = loadState();\r\n\r\n  // check if employee id was already selected\r\n  if (selectedEmployees.includes(id)) {\r\n    // remove id from array\r\n    selectedEmployees.splice(id, 1);\r\n\r\n    // set localstorage\r\n    saveState(selectedEmployees);\r\n  }\r\n\r\n  return {\r\n    type: actionTypes.UNSELECT_EMPLOYEE,\r\n    id: id,\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Letter from \"../components/Letter/Letter\";\r\nimport * as actions from \"../store/actions\";\r\n\r\nfunction Employees() {\r\n  const alphabet = useSelector((state) => state.alphabet);\r\n  const employees = useSelector((state) => state.employeesFetched);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchEmployees());\r\n  }, [dispatch]);\r\n\r\n  function onToggleChange(event) {\r\n    if (event.target.checked) {\r\n      dispatch(actions.selectEmployee(event.target.id));\r\n    } else {\r\n      dispatch(actions.unselectEmployee(event.target.id));\r\n    }\r\n  }\r\n\r\n  if (!employees) {\r\n    return <div></div>;\r\n  }\r\n\r\n  let letters = [];\r\n\r\n  if (employees) {\r\n    const employeesByLetter = employees.reduce(function (acc, obj) {\r\n      let key = obj[\"lastName\"][0];\r\n      if (!acc[key]) {\r\n        acc[key] = [];\r\n      }\r\n      acc[key].push(obj);\r\n      return acc;\r\n    }, {});\r\n\r\n    letters = alphabet.map((letter) => {\r\n      return (\r\n        <Letter\r\n          key={letter}\r\n          letter={letter}\r\n          toggleChange={onToggleChange}\r\n          employees={\r\n            employeesByLetter[letter] ? employeesByLetter[letter] : null\r\n          }\r\n        ></Letter>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"employees-list\">\r\n      <h2>Employees </h2>\r\n      <hr />\r\n      <div className=\"Letters\">{letters}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EmployeesBirthday = () => {\r\n  const months = useSelector((state) => state.months);\r\n  const selectedEmployees = useSelector((state) => state.selectedEmployees);\r\n  const employeesFetched = useSelector((state) => state.employeesFetched);\r\n\r\n  let employeesByMonth = [];\r\n\r\n  if (selectedEmployees.length && employeesFetched) {\r\n    const emplyeesObjects = employeesFetched\r\n      .filter((employee) => selectedEmployees.includes(employee.id))\r\n      .map((employee) => {\r\n        const date = new Date(employee.dob);\r\n\r\n        const birthday =\r\n          date.getDate() +\r\n          \" \" +\r\n          months[date.getMonth()] +\r\n          \", \" +\r\n          date.getFullYear();\r\n\r\n        return { ...employee, month: date.getMonth(), birthday: birthday };\r\n      })\r\n      .sort(function (a, b) {\r\n        if (a.dob < b.dob) return -1;\r\n        else return 1;\r\n      });\r\n\r\n    const newEmplObj = emplyeesObjects.reduce(function (acc, obj) {\r\n      let key = obj.month;\r\n      if (!acc[key]) {\r\n        acc[key] = [];\r\n      }\r\n      acc[key].push(obj);\r\n      return acc;\r\n    }, {});\r\n\r\n    employeesByMonth = months.map((month, index) => {\r\n      return newEmplObj[index] ? (\r\n        <div key={month} className=\"month\">\r\n          <h3>{months[index]}</h3>\r\n\r\n          <ul>\r\n            {newEmplObj[index].map((employee) => (\r\n              <li key={employee.id}>\r\n                {employee.lastName} {employee.firstName} - {employee.birthday}{\" \"}\r\n                year\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : null;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"employees-birthdays\">\r\n      <h2>Employees birthday </h2>\r\n      <hr />\r\n      {employeesByMonth.length ? (\r\n        <div className=\"months\">{employeesByMonth}</div>\r\n      ) : (\r\n        <p>No selected employees</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeesBirthday;\r\n","import React, { Component } from \"react\";\n\nimport Employees from \"./containers/Employees\";\nimport EmployeesBirthday from \"./components/EmployeesBirthday/EmployeesBirthday\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Employees />\n        <EmployeesBirthday />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SELECT_EMPLOYEE:\r\n      console.log(\"state - \", state);\r\n\r\n      if (!state.selectedEmployees.includes(action.id)) {\r\n        console.log(\"state.selectedEmployees\", state.selectedEmployees);\r\n\r\n        const updatedEmployees = state.selectedEmployees.concat(action.id);\r\n\r\n        console.log(\"action.id\", action.id);\r\n        console.log(\"updatedEmployees\", updatedEmployees);\r\n\r\n        return {\r\n          ...state,\r\n          selectedEmployees: updatedEmployees,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n\r\n    case actionTypes.UNSELECT_EMPLOYEE:\r\n      if (state.selectedEmployees.includes(action.id)) {\r\n        const index = state.selectedEmployees.indexOf(action.id);\r\n\r\n        const updatedEmployees = [...state.selectedEmployees];\r\n        updatedEmployees.splice(index, 1);\r\n\r\n        return {\r\n          ...state,\r\n          selectedEmployees: updatedEmployees,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n\r\n    case actionTypes.GET_EMPLOYEES:\r\n      return {\r\n        ...state,\r\n        employeesFetched: action.employees,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { loadState } from \"./localStorage\";\r\n\r\nconst persistedState = loadState();\r\n\r\nexport const initialState = {\r\n  alphabet: [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n  ],\r\n  months: [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ],\r\n  selectedEmployees: persistedState,\r\n  employeesFetched: [],\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducer from \"./store/reducer\";\nimport { initialState } from \"./store/initialState\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}